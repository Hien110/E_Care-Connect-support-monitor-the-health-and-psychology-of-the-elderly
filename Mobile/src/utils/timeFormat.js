export const formatTime = (dateString) => {
  if (!dateString) return '';
  
  const messageDate = new Date(dateString);
  const now = new Date();
  const diffInMs = now - messageDate;
  const diffInSeconds = Math.floor(diffInMs / 1000);
  const diffInMinutes = Math.floor(diffInSeconds / 60);
  const diffInHours = Math.floor(diffInMinutes / 60);
  const diffInDays = Math.floor(diffInHours / 24);

  // N·∫øu trong v√≤ng 1 ph√∫t
  if (diffInMinutes < 1) {
    return 'V·ª´a xong';
  }
  
  // N·∫øu trong v√≤ng 1 gi·ªù
  if (diffInMinutes < 60) {
    return `${diffInMinutes} ph√∫t`;
  }
  
  // N·∫øu trong v√≤ng 24 gi·ªù
  if (diffInHours < 24) {
    return `${diffInHours} gi·ªù`;
  }
  
  // N·∫øu trong v√≤ng 7 ng√†y
  if (diffInDays < 7) {
    return `${diffInDays} ng√†y`;
  }
  
  // N·∫øu c√πng nƒÉm, hi·ªÉn th·ªã ng√†y/th√°ng
  const currentYear = now.getFullYear();
  const messageYear = messageDate.getFullYear();
  
  if (currentYear === messageYear) {
    return messageDate.toLocaleDateString('vi-VN', {
      day: '2-digit',
      month: '2-digit'
    });
  }
  
  // N·∫øu kh√°c nƒÉm, hi·ªÉn th·ªã ng√†y/th√°ng/nƒÉm
  return messageDate.toLocaleDateString('vi-VN', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
};

export const formatMessageTime = (dateString) => {
  if (!dateString) return '';
  
  const messageDate = new Date(dateString);
  const now = new Date();
  const isToday = messageDate.toDateString() === now.toDateString();
  
  if (isToday) {
    return messageDate.toLocaleTimeString('vi-VN', {
      hour: '2-digit',
      minute: '2-digit',
      hour12: false
    });
  } else {
    const diffInDays = Math.floor((now - messageDate) / (1000 * 60 * 60 * 24));
    if (diffInDays === 1) {
      return `H√¥m qua ${messageDate.toLocaleTimeString('vi-VN', {
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
      })}`;
    } else if (diffInDays < 7) {
      const dayNames = ['Ch·ªß nh·∫≠t', 'Th·ª© 2', 'Th·ª© 3', 'Th·ª© 4', 'Th·ª© 5', 'Th·ª© 6', 'Th·ª© 7'];
      return `${dayNames[messageDate.getDay()]} ${messageDate.toLocaleTimeString('vi-VN', {
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
      })}`;
    } else {
      return messageDate.toLocaleDateString('vi-VN', {
        day: '2-digit',
        month: '2-digit',
        year: messageDate.getFullYear() !== now.getFullYear() ? 'numeric' : undefined
      });
    }
  }
};

export const formatMessagePreview = (message, currentUserId) => {
  if (!message) return 'Ch∆∞a c√≥ tin nh·∫Øn';
  
  const isOwnMessage = message.sender?._id === currentUserId || message.sender === currentUserId;
  const senderName = isOwnMessage ? 'B·∫°n' : (message.sender?.fullName || 'Ng∆∞·ªùi kh√°c');
  
  // L·∫•y n·ªôi dung tin nh·∫Øn t·ª´ content object
  let content = '';
  if (message.content) {
    if (typeof message.content === 'string') {
      content = message.content;
    } else if (message.content.text) {
      content = message.content.text;
    } else if (message.content.systemMessage) {
      return message.content.systemMessage; // System message kh√¥ng c·∫ßn hi·ªÉn th·ªã ng∆∞·ªùi g·ª≠i
    } else if (message.content.fileUrl) {
      content = message.messageType === 'image' ? 'üì∑ H√¨nh ·∫£nh' : 'üìé T·ªáp ƒë√≠nh k√®m';
    } else {
      content = 'Tin nh·∫Øn';
    }
  } else {
    content = 'Tin nh·∫Øn';
  }
  
  // C·∫Øt ng·∫Øn n·ªôi dung n·∫øu qu√° d√†i
  if (content.length > 50) {
    content = content.substring(0, 47) + '...';
  }
  
  // V·ªõi system message, kh√¥ng hi·ªÉn th·ªã ng∆∞·ªùi g·ª≠i
  if (message.messageType === 'system') {
    return content;
  }
  
  return `${senderName}: ${content}`;
};
